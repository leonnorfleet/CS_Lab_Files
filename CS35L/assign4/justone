#!/usr/local/cs/bin/python3
import sys, subprocess

def get_hash():
#    try:
        hashes = []
        
        process1 = subprocess.run('git show HEAD | grep ^commit', check=True, shell=True,
                                 stdout=subprocess.PIPE, text=True)

        process2 = subprocess.run('git show HEAD^ | grep ^commit', check=True, shell=True,
                                 stdout=subprocess.PIPE, text=True)
        
        a = process1.stdout.splitlines()
        b = process2.stdout.splitlines()

        a = ''.join(a).split(' ')[1]
        b = ''.join(b).split(' ')[1]

        return a, b
"""
        hashes.append(a[1])

        process = subprocess.run('git show HEAD^ | grep ^commit', check=True, shell=True,
                                 stdout=subprocess.PIPE, text=True)
        
        a = process.stdout.splitlines()
        a = a.split(' ')

        hashes.append(a[1])
        
    except subprocess.CalledProcessError:
        sys.stdout.write('Unexpected Error')
        sys.exit()

    return (hashes[0], hashes[1])
"""

def diff(hash1, hash2):
    try:
        command = f'git diff {hash1} {hash2} | grep .'
        process = subprocess.run(command, check=True, shell=True, stdout=subprocess.PIPE, text=True)
    
    except subprocess.CalledProcessError:
        sys.stdout.write('Unexpected Error')
        sys.exit()
    
    return process.stdout



hash1, hash2 = get_hash()

res = diff(hash1, hash2)
    
for l in res.splitlines():
    sys.stdout.write(l + '\n')

